name: iOS starter workflow

on:
  push:
    branches: [ iosAction ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - run: npm install
    - run: cd ios && pod install

    - name: Set Default Scheme
      working-directory: ./ios
      run: |
        scheme_list=$(xcodebuild -list -json | tr -d "\n")
        default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
        echo $default | cat >default
        echo Using default scheme: $default
    - name: Build
      working-directory: ./ios
      env:
        scheme: ${{ 'default' }}
        platform: ${{ 'iOS Simulator' }}
      run: |
        device=`instruments -s -devices | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
        if [ $scheme = default ]; then scheme=$(cat default); fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
    - name: Test
      working-directory: ./ios
      env:
        scheme: ${{ 'default' }}
        platform: ${{ 'iOS Simulator' }}
      run: |
        device=`instruments -s -devices | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}'`
        if [ $scheme = default ]; then scheme=$(cat default); fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
